<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="member">

<update id="update" parameterType="MemberDTO">
update member     
set    tel=#{tel},
       email=#{email},   
	   zipcode=#{zipcode}, 
	   address1=#{address1},
	   address2=#{address2},
	   job=#{job}      
where  id=#{id}       
</update>

<select id="getFname" parameterType="String" resultType="String">
select fname from member
where id=#{id}
</select>

<delete id="delete" parameterType="String">
delete from member
where id=#{id}
</delete>

<select id="loginCheck" parameterType="map" resultType="int">
select count(id) from member
where id=#{id} and passwd=#{passwd}
</select>


<update id="updatePasswd" parameterType="Map">
update member
set passwd=#{passwd}
where id=#{id}
</update>


<update id="updateFile" parameterType="Map">
update member
set fname=#{fname}
where id=#{id}
</update>


<select id="getGrade" parameterType="String" resultType="String">
SELECT grade FROM member
WHERE id = #{id}
</select>


<select id="idFind" parameterType="map" resultType="String">
SELECT id FROM member
WHERE mname =#{mname} and email=#{email}
</select>


<select id="pwFind" parameterType="map" resultType="String">
SELECT passwd FROM member
WHERE id =#{id} and mname=#{mname}
</select>


<select id="duplicateEmail" parameterType="String" resultType="int">
select count(email) From member
where email=#{email}
</select>


<select id="duplicateID" parameterType="String" resultType="int">
select count(id) From member
where id=#{id}
</select>


<insert id="create" parameterType="MemberDTO">
INSERT INTO member(id, passwd, mname, tel, email, zipcode,
                   address1, address2, job, mdate, fname)
            VALUES(#{id}, #{passwd}, #{mname}, #{tel}, #{email}, #{zipcode}, 
             #{address1}, #{address2}, #{job}, sysdate, #{fname})
</insert>


<select id="read" parameterType="String" resultType="MemberDTO">
select * from member
where id=#{id}
</select>
<select id="total" parameterType="map" resultType="int">
select count(*) From member
<where>
<if test="col=='mname'">
	mname like '%'||#{word}||'%'
</if>
<if test="col=='email'">
	email like '%'||#{word}||'%'
</if>
<if test="col=='id'">
	id like '%'||#{word}||'%'
</if>
</where>
</select>

                   
<select id="list" parameterType="map" resultType="MemberDTO">
SELECT id, mname, tel, email,  address1, address2, fname, r      
from(                                                           
	SELECT id, mname, tel, email,  address1, address2, fname, rownum r
	 from(                                                        
			SELECT id, mname, tel, email,  address1, address2, fname  
			FROM member                                            
<where>
<if test="col=='mname'">
	mname like '%'||#{word}||'%'
</if>
<if test="col=='email'">
	email like '%'||#{word}||'%'
</if>
<if test="col=='id'">
	id like '%'||#{word}||'%'
</if>
</where>                        
			ORDER BY id ASC                                     
	 	)                                                       
	 )
<![CDATA[                                                           
where r>=#{sno} and r<=#{eno}
]]>                                               
</select>	
</mapper>